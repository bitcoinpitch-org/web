services:
  app:
    build:
      context: .
      dockerfile: docker/app/Dockerfile
    env_file: .env
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - TWITTER_API_KEY=${TWITTER_API_KEY}
      - TWITTER_API_SECRET=${TWITTER_API_SECRET}
      - TWITTER_REDIRECT_URL=${TWITTER_REDIRECT_URL}
      - ADMIN_SETUP_TOKEN=${ADMIN_SETUP_TOKEN}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_FROM_EMAIL=${SMTP_FROM_EMAIL}
      - SMTP_FROM_NAME=${SMTP_FROM_NAME}
      - SITE_URL=${SITE_URL}
    volumes:
      - ./volumes/app:/app/data
      - ./volumes/logs:/app/logs
      - ./.env:/app/.env
      - ./migrations:/app/migrations
    ports:
      - "8090:8090"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - bitcoinpitch
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://127.0.0.1:8090/api/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

  db:
    image: postgres:15-alpine
    env_file: .env
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - ./volumes/postgres:/var/lib/postgresql/data
      - ./docker/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - bitcoinpitch
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

networks:
  bitcoinpitch:
    driver: bridge

volumes:
  postgres:
    driver: local
  app:
    driver: local
  logs:
    driver: local 